/*
 * Copyright Â© 2016 TCS and others.  All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
 */
package org.opendaylight.cardinal.impl;
//

// Generated by mibgen version 5.1 (03/08/07) when compiling ODL-CARDINAL-MIB in standard metadata mode.
//

// jmx imports
//
import com.sun.management.snmp.SnmpStatusException;

/**
 * This interface is used for representing the remote management interface for
 * the "OdlOpenFlowStats2" MBean.
 */
public interface OdlOpenFlowStats2MBean {

    /**
     * Getter for the "OdlOpenflowFlowstats2" variable.
     */
    public String getOdlOpenflowFlowstats2() throws SnmpStatusException;

    /**
     * Setter for the "OdlOpenflowFlowstats2" variable.
     */
    public void setOdlOpenflowFlowstats2(String x) throws SnmpStatusException;

    /**
     * Checker for the "OdlOpenflowFlowstats2" variable.
     */
    public void checkOdlOpenflowFlowstats2(String x) throws SnmpStatusException;

    /**
     * Getter for the "OdlOpenflowStatus2" variable.
     */
    public String getOdlOpenflowStatus2() throws SnmpStatusException;

    /**
     * Setter for the "OdlOpenflowStatus2" variable.
     */
    public void setOdlOpenflowStatus2(String x) throws SnmpStatusException;

    /**
     * Checker for the "OdlOpenflowStatus2" variable.
     */
    public void checkOdlOpenflowStatus2(String x) throws SnmpStatusException;

    /**
     * Getter for the "OdlOpenflowManufacturer2" variable.
     */
    public String getOdlOpenflowManufacturer2() throws SnmpStatusException;

    /**
     * Setter for the "OdlOpenflowManufacturer2" variable.
     */
    public void setOdlOpenflowManufacturer2(String x) throws SnmpStatusException;

    /**
     * Checker for the "OdlOpenflowManufacturer2" variable.
     */
    public void checkOdlOpenflowManufacturer2(String x) throws SnmpStatusException;

    /**
     * Getter for the "OdlOpenflowMacAddress2" variable.
     */
    public String getOdlOpenflowMacAddress2() throws SnmpStatusException;

    /**
     * Setter for the "OdlOpenflowMacAddress2" variable.
     */
    public void setOdlOpenflowMacAddress2(String x) throws SnmpStatusException;

    /**
     * Checker for the "OdlOpenflowMacAddress2" variable.
     */
    public void checkOdlOpenflowMacAddress2(String x) throws SnmpStatusException;

    /**
     * Getter for the "OdlOpenflowInterface2" variable.
     */
    public String getOdlOpenflowInterface2() throws SnmpStatusException;

    /**
     * Setter for the "OdlOpenflowInterface2" variable.
     */
    public void setOdlOpenflowInterface2(String x) throws SnmpStatusException;

    /**
     * Checker for the "OdlOpenflowInterface2" variable.
     */
    public void checkOdlOpenflowInterface2(String x) throws SnmpStatusException;

    /**
     * Getter for the "OdlOpenflowNode2" variable.
     */
    public String getOdlOpenflowNode2() throws SnmpStatusException;

    /**
     * Setter for the "OdlOpenflowNode2" variable.
     */
    public void setOdlOpenflowNode2(String x) throws SnmpStatusException;

    /**
     * Checker for the "OdlOpenflowNode2" variable.
     */
    public void checkOdlOpenflowNode2(String x) throws SnmpStatusException;

    /**
     * Getter for the "OdlOpenflowMeterstats2" variable.
     */
    public String getOdlOpenflowMeterstats2() throws SnmpStatusException;

    /**
     * Setter for the "OdlOpenflowMeterstats2" variable.
     */
    public void setOdlOpenflowMeterstats2(String x) throws SnmpStatusException;

    /**
     * Checker for the "OdlOpenflowMeterstats2" variable.
     */
    public void checkOdlOpenflowMeterstats2(String x) throws SnmpStatusException;

}
