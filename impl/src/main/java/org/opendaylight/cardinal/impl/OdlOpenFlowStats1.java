/*
 * Copyright Â© 2016 TCS and others.  All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
 */
package org.opendaylight.cardinal.impl;
//

// Generated by mibgen version 5.1 (03/08/07) when compiling ODL-CARDINAL-MIB.
//

// java imports
//
import java.io.Serializable;

// jmx imports
//
import javax.management.MBeanServer;
import com.sun.management.snmp.SnmpString;
import com.sun.management.snmp.SnmpStatusException;

// jdmk imports
//
import com.sun.management.snmp.agent.SnmpMib;

/**
 * The class is used for implementing the "OdlOpenFlowStats1" group. The group
 * is defined with the following oid: 1.3.6.1.3.1.1.11.
 */
public class OdlOpenFlowStats1 implements OdlOpenFlowStats1MBean, Serializable {

    /**
     * Variable for storing the value of "OdlOpenflowFlowstats1". The variable
     * is identified by: "1.3.6.1.3.1.1.11.6".
     */
    protected String OdlOpenflowFlowstats1 = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "OdlOpenflowStatus1". The variable is
     * identified by: "1.3.6.1.3.1.1.11.5".
     */
    protected String OdlOpenflowStatus1 = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "OdlOpenflowManufacturer1". The
     * variable is identified by: "1.3.6.1.3.1.1.11.4".
     */
    protected String OdlOpenflowManufacturer1 = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "OdlOpenflowMacAddress1". The variable
     * is identified by: "1.3.6.1.3.1.1.11.3".
     */
    protected String OdlOpenflowMacAddress1 = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "OdlOpenflowInterface1". The variable
     * is identified by: "1.3.6.1.3.1.1.11.2".
     */
    protected String OdlOpenflowInterface1 = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "OdlOpenflowNode1". The variable is
     * identified by: "1.3.6.1.3.1.1.11.1".
     */
    protected String OdlOpenflowNode1 = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "OdlOpenflowMeterstats1". The variable
     * is identified by: "1.3.6.1.3.1.1.11.7".
     */
    protected String OdlOpenflowMeterstats1 = new String("JDMK 5.1");

    /**
     * Constructor for the "OdlOpenFlowStats1" group. If the group contains a
     * table, the entries created through an SNMP SET will not be registered in
     * Java DMK.
     */
    public OdlOpenFlowStats1(SnmpMib myMib) {
    }

    /**
     * Constructor for the "OdlOpenFlowStats1" group. If the group contains a
     * table, the entries created through an SNMP SET will be AUTOMATICALLY
     * REGISTERED in Java DMK.
     */
    public OdlOpenFlowStats1(SnmpMib myMib, MBeanServer server) {
    }

    /**
     * Getter for the "OdlOpenflowFlowstats1" variable.
     */
    public String getOdlOpenflowFlowstats1() throws SnmpStatusException {
        return OdlOpenflowFlowstats1;
    }

    /**
     * Setter for the "OdlOpenflowFlowstats1" variable.
     */
    public void setOdlOpenflowFlowstats1(String x) throws SnmpStatusException {
        OdlOpenflowFlowstats1 = x;
    }

    /**
     * Checker for the "OdlOpenflowFlowstats1" variable.
     */
    public void checkOdlOpenflowFlowstats1(String x) throws SnmpStatusException {
        //
        // Add your own checking policy.
        //
    }

    /**
     * Getter for the "OdlOpenflowStatus1" variable.
     */
    public String getOdlOpenflowStatus1() throws SnmpStatusException {
        return OdlOpenflowStatus1;
    }

    /**
     * Setter for the "OdlOpenflowStatus1" variable.
     */
    public void setOdlOpenflowStatus1(String x) throws SnmpStatusException {
        OdlOpenflowStatus1 = x;
    }

    /**
     * Checker for the "OdlOpenflowStatus1" variable.
     */
    public void checkOdlOpenflowStatus1(String x) throws SnmpStatusException {
        //
        // Add your own checking policy.
        //
    }

    /**
     * Getter for the "OdlOpenflowManufacturer1" variable.
     */
    public String getOdlOpenflowManufacturer1() throws SnmpStatusException {
        return OdlOpenflowManufacturer1;
    }

    /**
     * Setter for the "OdlOpenflowManufacturer1" variable.
     */
    public void setOdlOpenflowManufacturer1(String x) throws SnmpStatusException {
        OdlOpenflowManufacturer1 = x;
    }

    /**
     * Checker for the "OdlOpenflowManufacturer1" variable.
     */
    public void checkOdlOpenflowManufacturer1(String x) throws SnmpStatusException {
        //
        // Add your own checking policy.
        //
    }

    /**
     * Getter for the "OdlOpenflowMacAddress1" variable.
     */
    public String getOdlOpenflowMacAddress1() throws SnmpStatusException {
        return OdlOpenflowMacAddress1;
    }

    /**
     * Setter for the "OdlOpenflowMacAddress1" variable.
     */
    public void setOdlOpenflowMacAddress1(String x) throws SnmpStatusException {
        OdlOpenflowMacAddress1 = x;
    }

    /**
     * Checker for the "OdlOpenflowMacAddress1" variable.
     */
    public void checkOdlOpenflowMacAddress1(String x) throws SnmpStatusException {
        //
        // Add your own checking policy.
        //
    }

    /**
     * Getter for the "OdlOpenflowInterface1" variable.
     */
    public String getOdlOpenflowInterface1() throws SnmpStatusException {
        return OdlOpenflowInterface1;
    }

    /**
     * Setter for the "OdlOpenflowInterface1" variable.
     */
    public void setOdlOpenflowInterface1(String x) throws SnmpStatusException {
        OdlOpenflowInterface1 = x;
    }

    /**
     * Checker for the "OdlOpenflowInterface1" variable.
     */
    public void checkOdlOpenflowInterface1(String x) throws SnmpStatusException {
        //
        // Add your own checking policy.
        //
    }

    /**
     * Getter for the "OdlOpenflowNode1" variable.
     */
    public String getOdlOpenflowNode1() throws SnmpStatusException {
        return OdlOpenflowNode1;
    }

    /**
     * Setter for the "OdlOpenflowNode1" variable.
     */
    public void setOdlOpenflowNode1(String x) throws SnmpStatusException {
        OdlOpenflowNode1 = x;
    }

    /**
     * Checker for the "OdlOpenflowNode1" variable.
     */
    public void checkOdlOpenflowNode1(String x) throws SnmpStatusException {
        //
        // Add your own checking policy.
        //
    }

    /**
     * Getter for the "OdlOpenflowMeterstats1" variable.
     */
    public String getOdlOpenflowMeterstats1() throws SnmpStatusException {
        return OdlOpenflowMeterstats1;
    }

    /**
     * Setter for the "OdlOpenflowMeterstats1" variable.
     */
    public void setOdlOpenflowMeterstats1(String x) throws SnmpStatusException {
        OdlOpenflowMeterstats1 = x;
    }

    /**
     * Checker for the "OdlOpenflowMeterstats1" variable.
     */
    public void checkOdlOpenflowMeterstats1(String x) throws SnmpStatusException {
        //
        // Add your own checking policy.
        //
    }

}
