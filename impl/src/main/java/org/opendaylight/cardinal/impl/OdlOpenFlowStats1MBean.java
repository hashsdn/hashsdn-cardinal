/*
 * Copyright Â© 2016 TCS and others.  All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
 */
package org.opendaylight.cardinal.impl;
//

// Generated by mibgen version 5.1 (03/08/07) when compiling ODL-CARDINAL-MIB in standard metadata mode.
//

// jmx imports
//
import com.sun.management.snmp.SnmpStatusException;

/**
 * This interface is used for representing the remote management interface for
 * the "OdlOpenFlowStats1" MBean.
 */
public interface OdlOpenFlowStats1MBean {

    /**
     * Getter for the "OdlOpenflowFlowstats1" variable.
     */
    public String getOdlOpenflowFlowstats1() throws SnmpStatusException;

    /**
     * Setter for the "OdlOpenflowFlowstats1" variable.
     */
    public void setOdlOpenflowFlowstats1(String x) throws SnmpStatusException;

    /**
     * Checker for the "OdlOpenflowFlowstats1" variable.
     */
    public void checkOdlOpenflowFlowstats1(String x) throws SnmpStatusException;

    /**
     * Getter for the "OdlOpenflowStatus1" variable.
     */
    public String getOdlOpenflowStatus1() throws SnmpStatusException;

    /**
     * Setter for the "OdlOpenflowStatus1" variable.
     */
    public void setOdlOpenflowStatus1(String x) throws SnmpStatusException;

    /**
     * Checker for the "OdlOpenflowStatus1" variable.
     */
    public void checkOdlOpenflowStatus1(String x) throws SnmpStatusException;

    /**
     * Getter for the "OdlOpenflowManufacturer1" variable.
     */
    public String getOdlOpenflowManufacturer1() throws SnmpStatusException;

    /**
     * Setter for the "OdlOpenflowManufacturer1" variable.
     */
    public void setOdlOpenflowManufacturer1(String x) throws SnmpStatusException;

    /**
     * Checker for the "OdlOpenflowManufacturer1" variable.
     */
    public void checkOdlOpenflowManufacturer1(String x) throws SnmpStatusException;

    /**
     * Getter for the "OdlOpenflowMacAddress1" variable.
     */
    public String getOdlOpenflowMacAddress1() throws SnmpStatusException;

    /**
     * Setter for the "OdlOpenflowMacAddress1" variable.
     */
    public void setOdlOpenflowMacAddress1(String x) throws SnmpStatusException;

    /**
     * Checker for the "OdlOpenflowMacAddress1" variable.
     */
    public void checkOdlOpenflowMacAddress1(String x) throws SnmpStatusException;

    /**
     * Getter for the "OdlOpenflowInterface1" variable.
     */
    public String getOdlOpenflowInterface1() throws SnmpStatusException;

    /**
     * Setter for the "OdlOpenflowInterface1" variable.
     */
    public void setOdlOpenflowInterface1(String x) throws SnmpStatusException;

    /**
     * Checker for the "OdlOpenflowInterface1" variable.
     */
    public void checkOdlOpenflowInterface1(String x) throws SnmpStatusException;

    /**
     * Getter for the "OdlOpenflowNode1" variable.
     */
    public String getOdlOpenflowNode1() throws SnmpStatusException;

    /**
     * Setter for the "OdlOpenflowNode1" variable.
     */
    public void setOdlOpenflowNode1(String x) throws SnmpStatusException;

    /**
     * Checker for the "OdlOpenflowNode1" variable.
     */
    public void checkOdlOpenflowNode1(String x) throws SnmpStatusException;

    /**
     * Getter for the "OdlOpenflowMeterstats1" variable.
     */
    public String getOdlOpenflowMeterstats1() throws SnmpStatusException;

    /**
     * Setter for the "OdlOpenflowMeterstats1" variable.
     */
    public void setOdlOpenflowMeterstats1(String x) throws SnmpStatusException;

    /**
     * Checker for the "OdlOpenflowMeterstats1" variable.
     */
    public void checkOdlOpenflowMeterstats1(String x) throws SnmpStatusException;

}
